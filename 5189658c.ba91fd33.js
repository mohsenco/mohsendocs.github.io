(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{115:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var a=n(1),r=n(6),i=(n(0),n(140)),o={id:"repo-docker-openresty-prometheus",title:"Docker Openresty Prometheus",sidebar_label:"Docker Openresty Prometheus"},l={id:"projects/repo-docker-openresty-prometheus",title:"Docker Openresty Prometheus",description:":::important\r",source:"@site/docs/projects/repo-docker-openresty-prometheus.md",permalink:"/docs/projects/repo-docker-openresty-prometheus",editUrl:"https://github.com/mohsenco/mohsendocs.github.io/docs/projects/repo-docker-openresty-prometheus.md",sidebar_label:"Docker Openresty Prometheus",sidebar:"someSidebar",previous:{title:"Container Stress",permalink:"/docs/projects/repo-container-stress"},next:{title:"Docker web stack with mysql nginx proxy",permalink:"/docs/projects/repo-docker-web-stack-with-mysql-nginx-proxy"}},c=[{value:"GitHub CI status",id:"github-ci-status",children:[]},{value:"Docker Image tags",id:"docker-image-tags",children:[]},{value:"Default Ports",id:"default-ports",children:[]},{value:"How to Use",id:"how-to-use",children:[]},{value:"Supported tags and respective <code>Dockerfile</code> links",id:"supported-tags-and-respective-dockerfile-links",children:[]}],s={rightToc:c};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-important alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The repository of this docs is on GitHub ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/mohsenmottaghi/docker-openresty-prometheus"}),"https://github.com/mohsenmottaghi/docker-openresty-prometheus")))),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"This docs is not ready"))),Object(i.b)("h1",{id:"docker-openresty---docker-tooling-for-openresty"},"docker-openresty - Docker tooling for OpenResty"),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://img.shields.io/badge/Dockerfile-Pass-%3CCOLOR%3E.svg",alt:"Generic badge"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://img.shields.io/badge/Build_Dockerfile-Pass-%3CCOLOR%3E.svg",alt:"Generic badge"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://img.shields.io/badge/Docker_Image-AutoBuild_on_Docker_HUB-blue.svg",alt:"Generic badge"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://img.shields.io/badge/Image_Size-From_101MB-blue.svg",alt:"Generic badge"}))),Object(i.b)("h2",{id:"github-ci-status"},"GitHub CI status"),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/workflows/Bionic%20Docker%20Image%20CI/badge.svg",alt:"Bionic Docker Image CI"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/workflows/Alpine%20Docker%20Image%20CI/badge.svg",alt:"Alpine Docker Image CI"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/workflows/Xenial%20Docker%20Image%20CI/badge.svg",alt:"Xenial Docker Image CI"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/workflows/Stretch%20Docker%20Image%20CI/badge.svg",alt:"Stretch Docker Image CI"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/workflows/CentOS%20Docker%20Image%20CI/badge.svg",alt:"CentOS Docker Image CI"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/workflows/Buster%20Docker%20Image%20CI/badge.svg",alt:"Buster Docker Image CI"}))),Object(i.b)("h2",{id:"docker-image-tags"},"Docker Image tags"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Base Image"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Dockerfile"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Auto Build"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Status"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Alpine"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"alpine/Dockerfile"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Pass")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Bionc"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"bionic/Dockerfile"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Pass")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"CentOS"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"centos/Dockerfile"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Pass")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Jessie"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"archive/Dockerfile.jessie"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Pass - Archived")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"trusty"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"archive/Dockerfile.trusty"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Pass - Archived")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Xenial"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"xenial/Dockerfile"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Not Reviewed")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Stretch"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"stretch/Dockerfile"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Yes"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Not Reviewed")))),Object(i.b)("h2",{id:"default-ports"},"Default Ports"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Protocol"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Port number"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Describtion"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"HTTP"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"80"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Web Server")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"HTTP"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"9100"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Metrics Exporter")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"HTTPS"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"443"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Web Server - TLS Supported")))),Object(i.b)("h2",{id:"how-to-use"},"How to Use"),Object(i.b)("p",null,"It `s simple, just need to run a new container:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker run -idt --name <NAME> -p 80:80 -p 443:443 -p 9100:9100 mohsenmottaghi/docker-openresty-prometheus:<TAG> \n")),Object(i.b)("h1",{id:"nginx-exporter"},"NGINX Exporter"),Object(i.b)("p",null,"we use ",Object(i.b)("inlineCode",{parentName:"p"},"prometheus.lua")," script as nginx exporter. for use this script we have ",Object(i.b)("inlineCode",{parentName:"p"},"prometheus.conf")," file in ",Object(i.b)("inlineCode",{parentName:"p"},"nginx/conf.d")," directory that will set the lua script values and for location on serving metrics we use ",Object(i.b)("inlineCode",{parentName:"p"},"metrics.conf")," file and serve ",Object(i.b)("inlineCode",{parentName:"p"},"/metrics")," by default."),Object(i.b)("h1",{id:"openrasty-document"},"OpenRasty Document"),Object(i.b)("h2",{id:"supported-tags-and-respective-dockerfile-links"},"Supported tags and respective ",Object(i.b)("inlineCode",{parentName:"h2"},"Dockerfile")," links"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/tree/master/centos/Dockerfile"}),Object(i.b)("inlineCode",{parentName:"a"},"centos"),", (",Object(i.b)("em",{parentName:"a"},"centos/Dockerfile"),")")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/blob/master/archive/Dockerfile.trusty"}),Object(i.b)("inlineCode",{parentName:"a"},"trusty"),", (",Object(i.b)("em",{parentName:"a"},"centos/Dockerfile"),")")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/blob/master/archive/Dockerfile.jessie"}),Object(i.b)("inlineCode",{parentName:"a"},"jessie"),", (",Object(i.b)("em",{parentName:"a"},"centos/Dockerfile"),")"))),Object(i.b)("p",null,'The following "flavors" are built from source and are intended for more advanced and custom usage, caveat emptor:'),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/tree/master/alpine/Dockerfile"}),Object(i.b)("inlineCode",{parentName:"a"},"alpine"),", (",Object(i.b)("em",{parentName:"a"},"alpine/Dockerfile"),")")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/tree/master/bionic/Dockerfile"}),Object(i.b)("inlineCode",{parentName:"a"},"bionic"),", (",Object(i.b)("em",{parentName:"a"},"bionic/Dockerfile"),")")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/tree/master/xenial/Dockerfile"}),Object(i.b)("inlineCode",{parentName:"a"},"xenial"),", (",Object(i.b)("em",{parentName:"a"},"xenial/Dockerfile"),")")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/mohsenmottaghi/docker-openresty-prometheus/tree/master/stretch/Dockerfile"}),Object(i.b)("inlineCode",{parentName:"a"},"stretch"),", (",Object(i.b)("em",{parentName:"a"},"stretch/Dockerfile"),")"))),Object(i.b)("p",null,"Starting with ",Object(i.b)("inlineCode",{parentName:"p"},"1.13.6.1"),", releases are tagged with ",Object(i.b)("inlineCode",{parentName:"p"},"<openresty-version>-<image-version>-<flavor>"),".  The latest ",Object(i.b)("inlineCode",{parentName:"p"},"image-version")," will also be tagged ",Object(i.b)("inlineCode",{parentName:"p"},"<openresty-version>-<flavor>"),".   The HEAD of the master branch is also labeled plainly as ",Object(i.b)("inlineCode",{parentName:"p"},"<flavor>"),".  The builds are managed by ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://travis-ci.org/openresty/docker-openresty"}),"Travis-CI")," and ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://ci.appveyor.com/project/openresty/docker-openresty"}),"Appveyor")," (for Windows images)."),Object(i.b)("p",null,"Starting with ",Object(i.b)("inlineCode",{parentName:"p"},"1.15.8.1"),", there are also ",Object(i.b)("inlineCode",{parentName:"p"},"-nosse42")," image flavors for systems which do not support SSE 4.2 (e.g. older systems and embedded systems).  They are built with ",Object(i.b)("inlineCode",{parentName:"p"},"-mno-sse4.2")," appended to the build arg ",Object(i.b)("inlineCode",{parentName:"p"},"RESTY_LUAJIT_OPTIONS"),".  It is highly recommended ",Object(i.b)("em",{parentName:"p"},"NOT")," to use these if your system supports SSE 4.2 because the ",Object(i.b)("inlineCode",{parentName:"p"},"CRC32")," instruction dramatically improves large string performance.  These are only for built-from-source flavors, e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"1.15.8.1-3-bionic-nosse42"),", ",Object(i.b)("inlineCode",{parentName:"p"},"1.15.8.1-3-alpine-nosse42"),", ",Object(i.b)("inlineCode",{parentName:"p"},"1.15.8.1-3-alpine-fat-nosse42"),"."),Object(i.b)("p",null,"It is ",Object(i.b)("em",{parentName:"p"},"highly recommended")," that you use the upstream-based images for best support.  For best stability, pin your images to the full tag, for example ",Object(i.b)("inlineCode",{parentName:"p"},"1.15.8.1-3-bionic"),"."),Object(i.b)("h1",{id:"table-of-contents"},"Table of Contents"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#docker-openresty---docker-tooling-for-openresty"}),"docker-openresty - Docker tooling for OpenResty"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#github-ci-status"}),"GitHub CI status")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#docker-image-tags"}),"Docker Image tags")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#default-ports"}),"Default Ports")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#how-to-use"}),"How to Use")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#nginx-exporter"}),"NGINX Exporter")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#openrasty-document"}),"OpenRasty Document"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#supported-tags-and-respective-dockerfile-links"}),"Supported tags and respective ",Object(i.b)("inlineCode",{parentName:"a"},"Dockerfile")," links")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#table-of-contents"}),"Table of Contents")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#description"}),"Description")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#usage"}),"Usage")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#nginx-config-files"}),"Nginx Config Files")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#opm"}),"OPM")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#luarocks"}),"LuaRocks")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#tips--pitfalls"}),"Tips & Pitfalls")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#image-labels"}),"Image Labels")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#docker-cmd"}),"Docker CMD")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#building-from-source"}),"Building (from source)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#building-rpm-based"}),"Building (RPM based)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#building-deb-based"}),"Building (DEB based)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#building-windows-based"}),"Building (Windows based)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#feedback--bug-reports"}),"Feedback & Bug Reports")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#changelog--authors"}),"Changelog & Authors")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#copyright--license"}),"Copyright & License"))),Object(i.b)("h1",{id:"description"},"Description"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"docker-openresty")," is ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.docker.com"}),"Docker")," tooling for OpenResty (",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.openresty.org"}),"https://www.openresty.org"),")."),Object(i.b)("p",null,"Docker is a container management platform."),Object(i.b)("p",null,"OpenResty is a full-fledged web application server by bundling the standard nginx core,\nlots of 3rd-party nginx modules, as well as most of their external dependencies."),Object(i.b)("h1",{id:"usage"},"Usage"),Object(i.b)("p",null,"If you are happy with the build defaults, then you can use the openresty image from the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://hub.docker.com/r/openresty/openresty/"}),"Docker Hub"),".  The image tags available there are listed at the top of this README."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker run [options] openresty/openresty:buster-fat\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"[options]")," would be things like -p to map ports, -v to map volumes, and -d to daemonize."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"docker-openresty")," symlinks ",Object(i.b)("inlineCode",{parentName:"p"},"/usr/local/openresty/nginx/logs/access.log")," and ",Object(i.b)("inlineCode",{parentName:"p"},"error.log")," to ",Object(i.b)("inlineCode",{parentName:"p"},"/dev/stdout")," and ",Object(i.b)("inlineCode",{parentName:"p"},"/dev/stderr")," respectively, so that Docker logging works correctly.  If you change the log paths in your ",Object(i.b)("inlineCode",{parentName:"p"},"nginx.conf"),", you should symlink those paths as well. This is not possible with the ",Object(i.b)("inlineCode",{parentName:"p"},"windows")," image."),Object(i.b)("p",null,"Temporary directories such as ",Object(i.b)("inlineCode",{parentName:"p"},"client_body_temp_path")," are stored in ",Object(i.b)("inlineCode",{parentName:"p"},"/var/run/openresty/"),".  You may consider mounting that volume, rather than writing to a container-local directory.  This is not done for ",Object(i.b)("inlineCode",{parentName:"p"},"windows"),"."),Object(i.b)("h1",{id:"nginx-config-files"},"Nginx Config Files"),Object(i.b)("p",null,"The Docker tooling installs its own ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/openresty/docker-openresty/blob/master/nginx.conf"}),Object(i.b)("inlineCode",{parentName:"a"},"nginx.conf")," file"),".  If you want to directly override it, you can replace it in your own Dockerfile or via volume bind-mounting."),Object(i.b)("p",null,"For the Linux images, that ",Object(i.b)("inlineCode",{parentName:"p"},"nginx.conf")," has the directive ",Object(i.b)("inlineCode",{parentName:"p"},"include /etc/nginx/conf.d/*.conf;")," so all nginx configurations in that directory will be included.  The ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/openresty/docker-openresty/blob/master/nginx.vh.default.conf"}),"default virtual host configuration")," has the original OpenResty configuration and is copied to ",Object(i.b)("inlineCode",{parentName:"p"},"/etc/nginx/conf.d/default.conf"),"."),Object(i.b)("p",null,"You can override that ",Object(i.b)("inlineCode",{parentName:"p"},"default.conf")," directly or volume bind-mount the ",Object(i.b)("inlineCode",{parentName:"p"},"/etc/nginx/conf.d")," directory to your own set of configurations:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker run -v /my/custom/conf.d:/etc/nginx/conf.d openresty/openresty:alpine\n")),Object(i.b)("p",null,"If you are running on an ",Object(i.b)("inlineCode",{parentName:"p"},"selinux")," host (e.g. CentOS), you may need to add ",Object(i.b)("inlineCode",{parentName:"p"},":Z")," to your ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/storage/bind-mounts/#configure-the-selinux-label"}),"volume bind-mount argument"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker run -v /my/custom/conf.d:/etc/nginx/conf.d:Z openresty/openresty:alpine\n")),Object(i.b)("p",null,"When using the ",Object(i.b)("inlineCode",{parentName:"p"},"windows")," image you can change the main configuration directly:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker run -v C:/my/custom/nginx.conf:C:/openresty/conf/nginx.conf openresty/openresty:windows\n")),Object(i.b)("h1",{id:"opm"},"OPM"),Object(i.b)("p",null,"Starting at version 1.11.2.2, OpenResty for Linux includes a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/openresty/opm#readme"}),"package manager called ",Object(i.b)("inlineCode",{parentName:"a"},"opm")),", which can be found at ",Object(i.b)("inlineCode",{parentName:"p"},"/usr/local/openresty/bin/opm"),"."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"opm")," is built in all the images except ",Object(i.b)("inlineCode",{parentName:"p"},"alpine"),", ",Object(i.b)("inlineCode",{parentName:"p"},"stretch")," and ",Object(i.b)("inlineCode",{parentName:"p"},"buster"),"."),Object(i.b)("p",null,"To use ",Object(i.b)("inlineCode",{parentName:"p"},"opm")," in the ",Object(i.b)("inlineCode",{parentName:"p"},"alpine")," image, you must also install the ",Object(i.b)("inlineCode",{parentName:"p"},"curl")," and ",Object(i.b)("inlineCode",{parentName:"p"},"perl")," packages; they are not included by default because they double the image size.  You may install them like so: ",Object(i.b)("inlineCode",{parentName:"p"},"apk add --no-cache curl perl"),"."),Object(i.b)("p",null,"To use ",Object(i.b)("inlineCode",{parentName:"p"},"opm")," within the ",Object(i.b)("inlineCode",{parentName:"p"},"stretch")," and ",Object(i.b)("inlineCode",{parentName:"p"},"buster")," image, you can either use the ",Object(i.b)("inlineCode",{parentName:"p"},"stretch-fat"),"/",Object(i.b)("inlineCode",{parentName:"p"},"buster-fat")," image or install the ",Object(i.b)("inlineCode",{parentName:"p"},"openresty-opm")," package in a custom build (which you would need to do to install your own ",Object(i.b)("inlineCode",{parentName:"p"},"opm")," packages anyway), as shown in ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/openresty/docker-openresty/blob/master/stretch/Dockerfile.opm_example"}),"this example"),"."),Object(i.b)("h1",{id:"luarocks"},"LuaRocks"),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://luarocks.org/"}),"LuaRocks")," is included in the ",Object(i.b)("inlineCode",{parentName:"p"},"alpine-fat"),", ",Object(i.b)("inlineCode",{parentName:"p"},"centos"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"xenial")," variants.  It is excluded from ",Object(i.b)("inlineCode",{parentName:"p"},"alpine")," because it generally requires a build system and we want to keep that variant lean."),Object(i.b)("p",null,"It is available at ",Object(i.b)("inlineCode",{parentName:"p"},"/usr/local/openresty/luajit/bin/luarocks"),".  Packages can be added in your dependent Dockerfiles like so:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"RUN /usr/local/openresty/luajit/bin/luarocks install <rock>\n")),Object(i.b)("h1",{id:"tips--pitfalls"},"Tips & Pitfalls"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"envsubst")," utility is included in all images except ",Object(i.b)("inlineCode",{parentName:"p"},"alpine")," and ",Object(i.b)("inlineCode",{parentName:"p"},"windows"),"; this utility is also included\nin the Nginx docker image and is used to template environment variables into configuration files.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Docker Hub")," does not currently support ARM builds, thus an ",Object(i.b)("inlineCode",{parentName:"p"},"armhf-xenial")," image is not available (See ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/openresty/docker-openresty/pull/26"}),"#26"),"). You can build an image yourself using the ",Object(i.b)("inlineCode",{parentName:"p"},"RESTY_DEBIAN_BASE")," build argument:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'docker build -f xenial/Dockerfile --build-arg "RESTY_DEBIAN_BASE=armv7/armhf-ubuntu" .\n')))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"\n * By default, OpenResty is built with SSE4.2 optimizations if the build machine supports it.  If run on machine without SSE4.2, there will be [invalid opcode issues](https://github.com/openresty/docker-openresty/issues/39). **Thus all the Docker Hub images require SSE4.2.**  You can [build a custom image from source](#building-from-source) explicitly without SSE4.2 support, using build arguments like so:\n")),Object(i.b)("p",null,"docker build -f xenial/Dockerfile --build-arg \"RESTY_LUAJIT_OPTIONS=--with-luajit-xcflags='-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT -mno-sse4.2'\" ."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"\n* OpenResty's OpenSSL library version must be compatible with your `opm` and LuaRocks packages' version.  At minimum, the numeric portion should be the same (e.g. `1.1.1`).  The image label `resty_openssl_version` indicates this value. see [Labels](#image-labels).\n\n* The `1.13.6.2-alpine` is built from `OpenSSL 1.0.2r` because of build issues on Alpine. `1.15.8.1-alpine` is built from `OpenSSL 1.1.1c` on `Alpine 3.9`.\n\n* Windows images must be built from the same version as the host system it runs on.  See [Windows container version compatibility](https://docs.microsoft.com/en-us/virtualization/windowscontainers/deploy-containers/version-compatibility).  Our images are currently built from the \"Windows Server 2016\" series.\n\n* The `SIGQUIT` signal will be sent to nginx to stop this container, to give it an opportunity to stop gracefully (i.e, finish processing active connections).  The Docker default is `SIGTERM`, which immediately terminates active connections.   Note that if your configuration listens on UNIX domain sockets, this means that you'll need to manually remove the socket file upon shutdown, due to [nginx bug #753](https://trac.nginx.org/nginx/ticket/753).\n\n* Alpine 3.9 added OpenSSL 1.1.1 and we build images against this.  OpenSSL 1.1.1 enabled TLS 1.3 by default, which can create unexpected behavior with ssl_session_(store|fetch)_by_lua*. See this patch, which will ship in OpenResty 1.17.x.1, for more information: https://github.com/openresty/lua-nginx-module/commit/d3dbc0c8102a9978d649c99e3261d93aac547378\n\nImage Labels\n============\n\nThe image builds are labeled with various information, such as the versions of OpenRestyand its dependent libraries.  Here's an example of printing the labels using [`jq`](https://stedolan.github.io/jq/):\n\n")),Object(i.b)("p",null,'$ docker pull openresty/openresty:1.15.8.1-1-alpine\n$ docker inspect openresty/openresty:1.15.8.1-1-alpine | jq \'.[].Config.Labels\'\n{\n"maintainer": "Evan Wies ',Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"mailto:evan@*********.net"}),"evan@*********.net"),'",\n"resty_add_package_builddeps": "",\n"resty_add_package_rundeps": "",\n"resty_config_options": "    --with-file-aio     --with-http_addition_module     --with-http_auth_request_module     --with-http_dav_module     --with-http_flv_module     --with-http_geoip_module=dynamic     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_image_filter_module=dynamic     --with-http_mp4_module     --with-http_random_index_module     --with-http_realip_module     --with-http_secure_link_module     --with-http_slice_module     --with-http_ssl_module     --with-http_stub_status_module     --with-http_sub_module     --with-http_v2_module     --with-http_xslt_module=dynamic     --with-ipv6     --with-mail     --with-mail_ssl_module     --with-md5-asm     --with-pcre-jit     --with-sha1-asm     --with-stream     --with-stream_ssl_module     --with-threads     ",\n"resty_config_options_more": "",\n"resty_eval_post_make": "",\n"resty_eval_pre_configure": "",\n"resty_openssl_version": "1.0.2r",\n"resty_pcre_version": "8.42",\n"resty_version": "1.15.8.1"\n}'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'\n| Label Name                   | Description             |\n:----------------------------- |:----------------------- |\n|`maintainer`                  | Maintainer of the image |\n|`resty_add_package_builddeps` | buildarg `RESTY_ADD_PACKAGE_BUILDDEPS` |\n|`resty_add_package_rundeps`   | buildarg `RESTY_ADD_PACKAGE_RUNDEPS` |\n|`resty_config_deps`           | buildarg `_RESTY_CONFIG_DEPS` (internal) |\n|`resty_config_options`        | buildarg `RESTY_CONFIG_OPTIONS`  |\n|`resty_config_options_more`   | buildarg `RESTY_CONFIG_OPTIONS_MORE`  |\n|`resty_deb_flavor`            | buildarg `RESTY_DEB_FLAVOR`  |\n|`resty_deb_version`           | buildarg `RESTY_DEB_VERSION`  |\n|`resty_eval_post_make`        | buildarg `RESTY_EVAL_POST_MAKE`  |\n|`resty_eval_pre_configure`    | buildarg `RESTY_EVAL_PRE_CONFIGURE`  |\n|`resty_image_base`            | Name of the base image to build from, buildarg  `RESTY_IMAGE_BASE` |\n|`resty_image_tag`             | Tag of the base image to build from, buildarg `RESTY_IMAGE_TAG` |\n|`resty_install_base`          | buildarg `RESTY_INSTALL_BASE` |\n|`resty_install_tag`           | buildarg `RESTY_INSTALL_TAG` |\n|`resty_luajit_options`        | buildarg `RESTY_LUAJIT_OPTIONS` |\n|`resty_luarocks_version`      | buildarg `RESTY_LUAROCKS_VERSION`  |\n|`resty_openssl_version`       | buildarg `RESTY_OPENSSL_VERSION`  |\n|`resty_pcre_version`          | buildarg `RESTY_PCRE_VERSION`  |\n|`resty_rpm_arch`              | buildarg `RESTY_RPM_ARCH`  |\n|`resty_rpm_dist`              | buildarg `RESTY_RPM_DIST`  |\n|`resty_rpm_flavor`            | buildarg `RESTY_RPM_FLAVOR`  |\n|`resty_rpm_version`           | buildarg `RESTY_RPM_VERSION`  |\n|`resty_version`               | buildarg `RESTY_VERSION`  |\n|`resty_yum_repo`              | buildarg `RESTY_YUM_REPO`  |\n\n\nDocker CMD\n==========\n\nThe `-g "daemon off;"` directive is used in the Dockerfile CMD to keep the Nginx daemon running after container creation. If this directive is added to the nginx.conf, then the `docker run` should explicitly invoke `openresty` (or `nginx` for `windows` images):\n')),Object(i.b)("p",null,"docker run ","[options]"," openresty/openresty:xenial openresty"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"\nInvoke another CMD, for example the `resty` utility, like so:\n")),Object(i.b)("p",null,"docker run ","[options]"," openresty/openresty:xenial resty ","[script.lua]"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"\n*NOTE* The `alpine` images do not include the packages `perl` and `ncurses`, which is needed by the `resty` utility.\n\n\nBuilding (from source)\n======================\n\nThis Docker image can be built and customized by cloning the repo and running `docker build` with the desired Dockerfile:\n\n")),Object(i.b)("p",null,"git clone ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/openresty/docker-openresty.git"}),"https://github.com/openresty/docker-openresty.git"),"\ncd docker-openresty\ndocker build -t myopenresty -f xenial/Dockerfile .\ndocker run myopenresty"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"\nDockerfiles are provided for the following base systems, selecting the Dockerfile path with `-f`:\n\n * [Alpine](https://github.com/openresty/docker-openresty/blob/master/alpine/Dockerfile) (`alpine/Dockerfile`)\n * [Alpine Fat](https://github.com/openresty/docker-openresty/blob/master/alpine-fat/Dockerfile) (`alpine-fat/Dockerfile`)\n * [Ubuntu Xenial](https://github.com/openresty/docker-openresty/blob/master/xenial/Dockerfile) (`xenial/Dockerfile`)\n * [Ubuntu Bionic](https://github.com/openresty/docker-openresty/blob/master/bionic/Dockerfile) (`bionic/Dockerfile`)\n\nWe used to support more build flavors but have trimmed that down.  Older Dockerfiles are archived in the [`archive`](https://github.com/openresty/docker-openresty/tree/master/archive) folder.\n\n\nThe following are the available build-time options. They can be set using the `--build-arg` CLI argument, like so:\n\n")),Object(i.b)("p",null,"docker build --build-arg RESTY_J=4 -f xenial/Dockerfile ."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'\n| Key | Default | Description |\n:----- | :-----: |:----------- |\n|RESTY_IMAGE_BASE | "ubuntu" / "alpine" | The Debian or Alpine Docker image base to build `FROM`. |\n|RESTY_IMAGE_TAG  | { "xenial", "bionic" } / "3.9" | The Debian or Alpine Docker image tag to build `FROM`. |\n|RESTY_VERSION | 1.15.8.3 | The version of OpenResty to use. |\n|RESTY_LUAROCKS_VERSION | 3.2.1 | The version of LuaRocks to use. |\n|RESTY_OPENSSL_VERSION | 1.1.0k  / 1.1.1c | The version of OpenSSL to use. |\n|RESTY_PCRE_VERSION | 8.43 | The version of PCRE to use. |\n|RESTY_J | 1 | Sets the parallelism level (-jN) for the builds. |\n|RESTY_CONFIG_OPTIONS | "--with-compat --with-file-aio --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_geoip_module=dynamic --with-http_gunzip_module --with-http_gzip_static_module --with-http_image_filter_module=dynamic --with-http_mp4_module --with-http_perl_module=dynamic --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-http_xslt_module=dynamic --with-ipv6 --with-mail --with-mail_ssl_module --with-md5-asm --with-pcre-jit --with-sha1-asm --with-stream --with-stream_ssl_module --with-threads" | Options to pass to OpenResty\'s `./configure` script. |\n|RESTY_LUAJIT_OPTIONS | "--with-luajit-xcflags=\'-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT\'" | Options to tweak LuaJIT. |\n|RESTY_CONFIG_OPTIONS_MORE | "" | More options to pass to OpenResty\'s `./configure` script. |\n|RESTY_ADD_PACKAGE_BUILDDEPS | "" | Additional packages to install with package manager required by build only (removed after installation) |\n|RESTY_ADD_PACKAGE_RUNDEPS | "" | Additional packages to install with package manager required at runtime (not removed after installation) |\n|RESTY_EVAL_PRE_CONFIGURE | "" | Command(s) to run prior to executing OpenResty\'s `./configure` script. (this can be used to clone a github repo of an extension you want to add to OpenResty, for example.  In that case, dont forget to add the appropriate argument to the RESTY_CONFIG_OPTIONS_MORE argument as described above). |\n|RESTY_EVAL_POST_MAKE | "" | Command(s) to run after running make install.  |\n\nThese built-from-source flavors include the following modules by default, but one can easily increase or decrease that with the custom build options above:\n\n * file-aio\n * http_addition_module\n * http_auth_request_module\n * http_dav_module\n * http_flv_module\n * http_geoip_module=dynamic\n * http_gunzip_module\n * http_gzip_static_module\n * http_image_filter_module=dynamic\n * http_mp4_module\n * http_random_index_module\n * http_realip_module\n * http_secure_link_module\n * http_slice_module\n * http_ssl_module\n * http_stub_status_module\n * http_sub_module\n * http_v2_module\n * http_xslt_module=dynamic\n * ipv6\n * mail\n * mail_ssl_module\n * md5-asm\n * pcre-jit\n * sha1-asm\n * stream\n * stream_ssl_module\n * threads\n[Back to TOC](#table-of-contents)\n\n\nBuilding (RPM based)\n====================\n\nOpenResty now now has [RPMs available](http://openresty.org/en/rpm-packages.html).  The `centos` images use these RPMs rather than building from source.\n\nThis Docker image can be built and customized by cloning the repo and running `docker build` with the desired Dockerfile:\n\n * [CentOS 7 RPM](https://github.com/openresty/docker-openresty/blob/master/centos/Dockerfile) (`centos/Dockerfile`)\n\nThe following are the available build-time options. They can be set using the `--build-arg` CLI argument, like so:\n\n')),Object(i.b)("p",null,'docker build --build-arg RESTY_RPM_FLAVOR="-debug" centos'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'\n| Key | Default | Description |\n:----- | :-----: |:----------- |\n|RESTY_IMAGE_BASE | "centos" | The Centos Docker image base to build `FROM`. |\n|RESTY_IMAGE_TAG | "7" | The CentOS Docker image tag to build `FROM`. |\n|RESTY_LUAROCKS_VERSION | 3.2.1 | The version of LuaRocks to use. |\n|RESTY_YUM_REPO | "https://openresty.org/package/centos/openresty.repo" | URL for the OpenResty YUM Repository. |\n|RESTY_RPM_FLAVOR | "" | The `openresty` package flavor to use.  Possibly `"-debug"` or `"-valgrind"`. |\n|RESTY_RPM_VERSION | "1.15.8.3-2" | The `openresty` package version to install. |\n|RESTY_RPM_DIST | "el7" | The `openresty` package distribution to install. |\n|RESTY_RPM_ARCH | "x86_64" | The `openresty` package architecture to install. |\n\n[Back to TOC](#table-of-contents)\n\n\nBuilding (DEB based)\n====================\n\nOpenResty now now has [Debian Packages (DEBs) available](http://openresty.org/en/deb-packages.html).  The `stretch` image use these DEBs rather than building from source.\n\nYou can derive your own Docker images from this to install your own packages.  See [Dockerfile.opm_example](https://github.com/openresty/docker-openresty/blob/master/stretch/Dockerfile.opm_example) and [Dockerfile.luarocks_example](https://github.com/openresty/docker-openresty/blob/master/stretch/Dockerfile.luarocks_example).\n\nThis Docker image can be built and customized by cloning the repo and running `docker build` with the desired Dockerfile:\n\n * [Debian Stretch 9 DEB](https://github.com/openresty/docker-openresty/blob/master/stretch/Dockerfile) (`stretch/Dockerfile`)\n * [Debian Buster 10 DEB](https://github.com/openresty/docker-openresty/blob/master/buster/Dockerfile) (`buster/Dockerfile`)\n\nThe following are the available build-time options. They can be set using the `--build-arg` CLI argument, like so:\n\n')),Object(i.b)("p",null,'docker build --build-arg RESTY_DEB_FLAVOR="-debug" -f stretch/Dockerfile .'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'\n| Key | Default | Description |\n:----- | :-----: |:----------- |\n|RESTY_IMAGE_BASE  | "debian" | The Debian Docker image base to build `FROM`. |\n|RESTY_IMAGE_TAG   | "stretch-slim" | The Debian Docker image tag to build `FROM`. |\n|RESTY_DEB_FLAVOR  | "" | The `openresty` package flavor to use.  Possibly `"-debug"` or `"-valgrind"`. |\n|RESTY_DEB_VERSION | "=1.15.8.3-1~stretch1" | The Debian package version to use, with `=` prepended. |\n\n[Back to TOC](#table-of-contents)\n\n\nBuilding (Windows based)\n========================\n\nThis Docker image can be built and customized by cloning the repo and running `docker build` with the desired Dockerfile:\n\n * [Windows](https://github.com/openresty/docker-openresty/blob/master/centos-rpm/Dockerfile) (`windows/Dockerfile`)\n\nThe following are the available build-time options. They can be set using the `--build-arg` CLI argument, like so:\n\n')),Object(i.b)("p",null,'docker build --build-arg RESTY_VERSION="1.13.6.2" -f windows/Dockerfile .'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'\n| Key | Default | Description |\n:----- | :-----: |:----------- |\n|RESTY_INSTALL_BASE | "microsoft/windowsservercore" | The Windows Server Docker image name to download and install OpenResty with. |\n|RESTY_INSTALL_TAG  | "ltsc2016" | The Windows Server Docker image name to download and install OpenResty with. |\n|RESTY_IMAGE_BASE   | "microsoft/nanoserver" | The Windows Server Docker image name to build `FROM` for final image. |\n|RESTY_IMAGE_TAG    | "sac2016" | The Windows Server Docker image tag to build `FROM` for final image. |\n|RESTY_VERSION      | 1.15.8.3 | The version of OpenResty to use. |\n\n[Back to TOC](#table-of-contents)\n\n\nFeedback & Bug Reports\n======================\n\nYou\'re very welcome to report bugs and give feedback as GitHub Issues:\n\nhttps://github.com/openresty/docker-openresty/issues\n\n[Back to TOC](#table-of-contents)\n\n\nChangelog & Authors\n===================\n\n * [CHANGELOG](https://github.com/openresty/docker-openresty/blob/master/CHANGELOG.md)\n * [AUTHORS](https://github.com/openresty/docker-openresty/blob/master/AUTHORS.md)\n\n[Back to TOC](#table-of-contents)\n\n\nCopyright & License\n===================\n\n`docker-openresty` is licensed under the 2-clause BSD license.\n\nCopyright (c) 2017-2019, Evan Wies <evan@neomantra.net>.\n\nThis module is licensed under the terms of the BSD license.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n[Back to TOC](#table-of-contents)\n\n')))}b.isMDXComponent=!0},140:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,u=p["".concat(o,".").concat(d)]||p[d]||m[d]||i;return n?r.a.createElement(u,l({ref:t},s,{components:n})):r.a.createElement(u,l({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);